language: python

cache:
  directories:
    - $GDALINST
    - ~/.cache/pip

env:
  global:
    - PIP_WHEEL_DIR=$HOME/.cache/pip/wheels
    - PIP_FIND_LINKS=file://$HOME/.cache/pip/wheels
    - GDALINST=$HOME/gdalinstall
    - GDALBUILD=$HOME/gdalbuild

  matrix:
    - GDALVERSION="1.11.5"
    - GDALVERSION="2.0.3"
    - GDALVERSION="2.3.2"
    - GDALVERSION="trunk"

matrix:
  fast_finish: true
  allow_failures:
    - env: GDALVERSION="trunk"
    
  exclude:

    - env: GDALVERSION="trunk"
      python: "2.7"

python:
  - "2.7"
  - "3.6"

addons:
  apt:

    packages:
    - libproj-dev
    - libhdf5-serial-dev
    - libatlas-dev
    - libatlas-base-dev
    - gfortran
    - libwebp5
    
before_install:
  - pip install -U pip
  - pip install wheel coveralls>=1.1 --upgrade
  - pip install setuptools==36.0.1
  - . ./scripts/travis_gdal_install.sh
  - export PATH=$GDALINST/gdal-$GDALVERSION/bin:$PATH
  - export LD_LIBRARY_PATH=$GDALINST/gdal-$GDALVERSION/lib:$LD_LIBRARY_PATH
  - export GDAL_DATA=$GDALINST/gdal-$GDALVERSION/share/gdal
  - export PROJ_LIB=/usr/share/proj
  - gdal-config --version

install:
  - pip install --upgrade --force-reinstall -r requirements-dev.txt
  - pip uninstall -y fiona
  - if [ "$GDALVERSION" = "trunk" ]; then echo "Using gdal trunk"; elif [ $(gdal-config --version) == "$GDALVERSION" ]; then echo "Using gdal $GDALVERSION"; else echo "NOT using gdal $GDALVERSION as expected; aborting"; exit 1; fi
  - pip install --global-option=build_ext --global-option='-I$GDALINST/gdal-$GDALVERSION/include' --global-option='-L$GDALINST/gdal-$GDALVERSION/lib' --global-option='-R$GDALINST/gdal-$GDALVERSION/lib' -e .[test]
  - fio --version
  - gdal-config --version
  - fio --gdal-version

script:
  - python -m pytest -m "not wheel" --cov fiona --cov-report term-missing

after_success:
  - coveralls || echo "!! intermittent coveralls failure"

before_cache:
  - if [ "$GDALVERSION" = "trunk" ]; then rm -rf $GDALINST/gdal-$GDALVERSION; fi


git:
  depth: 3
  quiet: true
  
jobs:
  include:
    
    - stage: Gdal 2.x legacy
      python: 2.7
      env: GDALVERSION="2.1.4"
    
    - stage: Gdal 2.x legacy
      python: 3.6
      env: GDALVERSION="2.1.4"
    
    - stage: Gdal 2.x legacy
      python: 2.7
      env: GDALVERSION="2.2.4"

    - stage: Gdal 2.x legacy
      python: 3.6
      env: GDALVERSION="2.2.4"

      
    - stage: Gdal 1.x legacy
      python: 2.7
      env: GDALVERSION="1.8.0"

    - stage: Gdal 1.x legacy
      python: 2.7
      env: GDALVERSION="1.9.2"
      
    - stage: Gdal 1.x legacy
      python: 2.7
      env: GDALVERSION="1.10.1"

      
stages:
  - test
  - name: Gdal 2.x legacy
    # require the branch name to be master (note for PRs this is the base branch name)
    if: commit_message = test_2x|test_all
  - name: Gdal 1.x legacy
    # require the branch name to be master (note for PRs this is the base branch name)
    #if: branch = test_1x|test_all
