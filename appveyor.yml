# Based on appveyor.yml from https://github.com/PDAL/PDAL and https://github.com/ogrisel/python-appveyor-demo
#

environment:

    global:
        # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
        # /E:ON and /V:ON options are not enabled in the batch script intepreter
        # See: http://stackoverflow.com/a/13751649/163740
        CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

        # set the directory to use for OSGeo4W install, our CMake find packages know
        # to look here
        OSGEODIR: "C:\\OSGeo4W64"

    matrix:

        - PYTHON: "C:\\Python27.10-x64"
          PYTHON_VERSION: "2.7.10"
          PYTHON_ARCH: "64"


install:

  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # make a temp directory for downloading osgeo4w-setup.exe
  - ps: mkdir C:\temp | out-null

  # make the osgeo directory
  - ps: mkdir %OSGEODIR% | out-null

  # get the OSGeo installer
  - ps: wget http://download.osgeo.org/osgeo4w/osgeo4w-setup-x86_64.exe -OutFile C:\temp\osgeo4w-setup.exe | out-null

  # and install our dependencies
  - C:\temp\osgeo4w-setup.exe -s http://download.osgeo.org/osgeo4w/ -a -q -P geos,gdal -R %OSGEODIR%
  
  - "SET PATH=%PATH%;%OSGEODIR%\\bin"
  - "SET PYTHONPATH=%OSGEODIR%\\bin;%PYTHONPATH%"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%CMD_IN_ENV% pip install -r requirements-dev.txt"
  
build_script:
  # Build the compiled extension
  - cmd: echo %PATH%

  - cmd: echo %PYTHONPATH%

  - ps: "ls \"C:\\OSGeo4W64\\bin\""
  
  - ps: "C:\\OSGeo4W64\\bin\\gdalinfo.exe --version"
  
  - "%CMD_IN_ENV% python setup.py build_ext -I%OSGEODIR%\\include -lgdal_i -L%OSGEODIR%\\lib --gdalversion 1.11.3"

  - "%CMD_IN_ENV% python setup.py install"
  
  
test_script:
  # Run the project tests
  - "%CMD_IN_ENV% python setup.py nosetests"
  