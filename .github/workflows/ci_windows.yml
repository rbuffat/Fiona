name: Windows CI

on: [push, pull_request]

jobs:
  build:
    name: Python ${{ matrix.python }} / GDAL ${{ matrix.GDAL_VERSION }}
    runs-on: [windows-2019]
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: 3.6
            GDAL_VERSION: 3.0.4
            GIS_INTERNALS: release-1911-x64-gdal-3-0-4-mapserver-7-4-3.zip
            GIS_INTERNALS_LIBS: release-1911-x64-gdal-3-0-4-mapserver-7-4-3-libs.zip

    env:
      GDAL_VERSION: ${{ matrix.GDAL_VERSION }}
      GIS_INTERNALS: ${{ matrix.GIS_INTERNALS }}
      GIS_INTERNALS_LIBS: ${{ matrix.GIS_INTERNALS_LIBS }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Set env variables
        run: |
          echo "C:\\gdal\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "GDAL_DATA=C:\\gdal\\bin\\gdal-data" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

          echo "GITHUB_PATH"
          Get-Content -Path $env:GITHUB_PATH
          echo ""
          echo "GITHUB_ENV"
          Get-Content -Path $env:GITHUB_ENV

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Download GIS_INTERNALS
        run: |
          curl http://download.gisinternals.com/sdk/downloads/$env:GIS_INTERNALS --output gdalbin.zip
          Expand-Archive -LiteralPath gdalbin.zip -DestinationPath C:\gdal
          curl http://download.gisinternals.com/sdk/downloads/$env:GIS_INTERNALS_LIBS --output gdallibs.zip
          Expand-Archive -LiteralPath gdallibs.zip -DestinationPath C:\gdal
          Get-ChildItem -Path C:\gdal

      - name: Install Python dependencies
        run: |
          python -m pip install -U pip wheel
          python -m pip install -r requirements-ci.txt
          python -m pip wheel -r requirements-dev.txt
          python -m pip install -r requirements-dev.txt

      - name: Build Fiona
        continue-on-error: ${{ matrix.GDALVERSION == 'master' }}
        run: |
          python -m pip install --install-option=build_ext --install-option="-IC:\gdal\include" --install-option="-lgdal_i" --install-option="-LC:\gdal\lib" --no-deps --force-reinstall --no-use-pep517 -e .

      - name: Print Environment
        continue-on-error: ${{ matrix.GDALVERSION == 'master' }}
        run: |
          echo "python -m pip freeze"
          python -m pip freeze

          echo ""
          echo "fio --version"
          fio --version

          echo ""
          echo "fio --gdal-version"
          fio --gdal-version

          echo ""
          echo "python -c \"import fiona; fiona.show_versions()\""
          python -c "import fiona; fiona.show_versions()"

      - name: pytest
        continue-on-error: ${{ matrix.GDALVERSION == 'master' }}
        run: |
          python -m pytest -m "not wheel" --cov fiona --cov-report term-missing

      - name: Coveralls
        continue-on-error: ${{ matrix.GDALVERSION == 'master' }}
        run: coveralls || echo "!! intermittent coveralls failure"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
